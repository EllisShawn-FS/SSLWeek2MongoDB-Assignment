{
	"info": {
		"_postman_id": "9f7cb414-6688-44ba-9231-e72722003635",
		"name": "NodeJS Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46398149"
	},
	"item": [
		{
			"name": "Players",
			"item": [
				{
					"name": "All Players",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should contain player data\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Players have required fields\", function () {",
									"    const jsonData = pm.response.json();",
									"    jsonData.data.forEach(player => {",
									"        pm.expect(player).to.have.property(\"name\");",
									"        pm.expect(player).to.have.property(\"age\");",
									"        pm.expect(player).to.have.property(\"jersey\");",
									"        pm.expect(player).to.have.property(\"position\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/players/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Players by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Player has resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"});",
									"",
									"pm.test(\"Response was successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/players/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains new player data\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data.name).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Jersey number is a number\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data.jersey).to.be.a('number');",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"player\": {\n    \"name\": \"Jalen Carter\",\n    \"age\": 24,\n    \"jersey\": 98,\n    \"position\": \"Defensive Tackle\",\n    \"team\": \"687531d0ad3abe0cff4200d9\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/players/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Updated fields are correct\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.name).to.eql(\"Shawn Ellis\");",
									"    pm.expect(jsonData.data.position).to.eql(\"Saftey\");",
									"});",
									"",
									"pm.test(\"Player update was successful\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Shawn Ellis\",\n    \"position\" : \"Safety\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/players/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ID matches deleted player\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"});",
									"",
									"pm.test(\"Response has successful deletion\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"Released\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/players/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"players",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "All Teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response should contain team data\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData.data).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Teams have required fields\", function () {",
									"    const jsonData = pm.response.json();",
									"    jsonData.data.forEach(player => {",
									"        pm.expect(player).to.have.property(\"name\");",
									"        pm.expect(player).to.have.property(\"city\");",
									"        pm.expect(player).to.have.property(\"sport\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/teams/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Team by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Team has resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"});",
									"",
									"pm.test(\"Response was successful\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/teams/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Team",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains new team data\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data.name).to.be.a('string');",
									"    pm.expect(jsonData.data.city).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Team creation was successful\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Chargers\",\n    \"city\": \"Los Angeles\",\n    \"sport\": \"Football\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/teams/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Team",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"City Upodated\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data.city).to.eql(\"San Diego\");",
									"});",
									"",
									"pm.test(\"Team update was successful\", () => {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"city\": \"San Diego\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/teams/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"teams",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Team",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"ID matches deleted team\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"});",
									"",
									"pm.test(\"Response has successful deletion\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include(\"Deleted\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/teams/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"teams",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "playerId",
			"value": "",
			"type": "string"
		}
	]
}